

        # path where write the response
        
        proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=mycache:10m inactive=60m use_temp_path=off;

        upstream backend_api {
            server backend:3000;
        }


        server {
            listen 5173;

            location /api/ {
                proxy_pass http://backend_api/;
                # rewrite backend_api/api/(.*)/$1 break;

                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $host;
                
                # cache all the files from the location directory
                proxy_cache mycache;
                proxy_cache_key "$request_uri";
                proxy_cache_valid 200 302 10m;
                proxy_cache_valid 404 1m;
                proxy_cache_methods GET HEAD;

                # Pass through the backend's headers
                proxy_pass_header on;
                add_header X-Cache-Status $upstream_cache_status;

                # CORS
                proxy_set_header 'Access-Control-Allow-Origin' 'http://127.0.0.1:5173';
                proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                proxy_set_header 'Access-Control-Allow-Credentials' 'true';
            }

             # âœ… This handles all frontend requests EXCEPT /api
    location / {
        root /data/www;
        # index index.html;
        # try_files $uri /index.html;
    }

        }

        log_format cache_log '$remote_addr - $upstream_cache_status [$time_local] "$request"';
access_log /var/log/nginx/cache.log cache_log;